#!/system/bin/sh
#
# app2sd v1.2 by erasmux
# moves /data/app and /data/dalvik-cache to the sd ext partition
# and creates symbolic links to their new location.
#
# /data/.dalvik2cache will move dalvik to cache partiton if more
# then 10M of free space is availble on cache.
#
# /data/.noapp2sd will disable app2sd (unrelated to dalvik2sd)
# /data/.nodalvik2sd will disable dalvik2sd (unrealted to app2sd)
#
# on failure check logcat and /data/app2sd.log.
#
# Enjoy!

ERR_LOG=/data/app2sd.log
errors=0
enable=1

if [ -e /system/bin/log ];
then
    LOGI="log -p i -t app2sd --"
    LOGE="log -p e -t app2sd --"
else
    LOGI=echo
    LOGE=echo
fi

$LOGI "+++ App2SD v1.2 started +++"

if [ -e $ERR_LOG ];
then
    rm $ERR_LOG
fi

# first find mount directory for ext partition and verify it:
SD_EXT_DIRECTORY=`busybox mount | busybox grep "sd.*type ext" | busybox cut -d " " -f 3`
if [ ! -d "$SD_EXT_DIRECTORY" ];
then
    $LOGE "Invalid SD ext directory: $SD_EXT_DIRECTORY";
    echo "Invalid SD ext directory: $SD_EXT_DIRECTORY" > $ERR_LOG
    echo "Logging mounted devices for debugging:" >> $ERR_LOG
    busybox mount >>$ERR_LOG 2>&1
    errors=1
    enable=0
else
    $LOGI "found SD ext partition at: $SD_EXT_DIRECTORY"
fi

# loop directories to be moved to SD:
for ii in dalvik app private;
do
  dir=$ii
  notag=$ii
  if [ "$ii" == "dalvik" ];
  then
      dir=dalvik-cache
  elif [ "$ii" == "private" ];
  then
      dir=app-private
      notag=app
  fi
  src=/data/$dir
  trg=$SD_EXT_DIRECTORY/$dir

  # /data/.noapp2sd (or /data/.nodalvik2sd) disable the appropraite part:
  if [ $enable -eq 0 -o -e /data/.no${notag}2sd ];
  then
      if [ $enable -ne 0 ];
      then
          $LOGI "/data/.no${tag}2sd exists, skipped ${ii}2sd..."
      fi
      # remove symbolic links if they are invalid:
      if [ -h $src -a ! -e $src/. ];
      then
          $LOGI "Removing invalid symoblic link $src (to `busybox readlink $src`)"
          busybox rm -f $src
          busybox mkdir $src;
      fi
  else
      # if requested move dalvik to cache instead of to SD card:
      if [ "$ii" == "dalvik" -a -e /data/.dalvik2cache ];
      then
          # don't move dalkvik to cache if less than 10M available:
          AVAIL=$( busybox df /cache | busybox tail -n 1 | busybox awk "{ print \$4 }" )
          if [ $AVAIL -gt 9999 ]; then
              $LOGI "/data/.dalvik2cache found and $AVAIL kb free on cache so using cache for dalvik-cache :)"
              trg=/cache/dalvik-cache
              busybox mkdir -p $trg
              busybox chown 1000:1000 $trg
              busybox chmod 771 $trg
              trg=/cache/dalvik-cache/data
          else
              $LOGI "/data/.dalvik2cache found but only $AVAIL kb free on cache so using SD for dalvik-cache :("
          fi
      fi

      # make sure target exists, create if necessary:
      busybox mkdir -p $trg
      if [ -d $trg ];
      then
          busybox chown 1000:1000 $trg
          busybox chmod 771 $trg
      else
          $LOGI "warning: $trg is not a directory?!"
      fi
      if [ ! -e $trg/. ];
      then
          $LOGE "ERROR: failed to created $trg"
          echo "ERROR: failed to created $trg" > $ERR_LOG
          errors=1
      elif [ -h $src -a "`busybox readlink $src`" == "$trg" ];
      then
          # nothing to do already linked correctly :D
      else
          # if source exists, move files to target:
          if [ -e $src/. ];
          then
              $LOGI "$src already exists, moving files to $trg"
              busybox mv $src/* $trg/
          fi
          if [ -h $src ];
          then
              $LOGI "$src already linked to `busybox readlink $src`, changing to $trg"
          fi
          # finally, create new links:
          busybox rm -rf $src
          busybox ln -s $trg $src;
          if [ ! -h $src ];
          then
              $LOGI "ERROR: failed to symbolic link $src"
              echo "ERROR: failed to symbolic link $src" > $ERR_LOG
              errors=1
          fi
      fi
  fi
done

if [ $errors -gt 0 ];
then
    $LOGE "--- App2SD completed with errors! ---"
else
    $LOGI "--- App2SD completed successfully! ---"
fi
